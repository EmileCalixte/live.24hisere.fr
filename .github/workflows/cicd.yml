name: CI/CD

on:
  pull_request:
    types:
      - opened
      - reopened
      - ready_for_review # When a PR changes from draft to ready for review
      - synchronize # When new commits are added to the PR
  push:
    branches: [ master ]

jobs:
  build:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-22.04
    container: ubuntu:22.04

    steps:
      - name: Update apt
        run: apt-get update

      - name: Install misc tools
        run: apt-get install -y curl git zip unzip

      - name: Install Node.js 20
        run: |
          curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
          apt-get install -y nodejs

      - name: Enable corepack to use yarn
        run: corepack enable

      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install JS dependencies
        run: pnpm install --frozen-lockfile

      - name: Run ESLint on frontend
        run: pnpm frontend lint

      - name: Run ESLint on backend
        run: pnpm backend lint

      - name: Generate Prisma client
        run: npx prisma generate
        working-directory: ./apps/backend

      - name: Run tests
        run: pnpm test run
        working-directory: ./apps/frontend
#        run: |
#          (cd frontend && yarn test run) &
#          (cd backend && yarn test run) &
#          wait

      - name: Create frontend production builds
        run: pnpm build
        working-directory: ./apps/frontend

      - name: Create backend production builds
        run: pnpm build
        working-directory: ./apps/backend

      - name: Clean files
        run: |
          rm -rf .git
          rm -rf .github
          rm -rf static
          rm -rf sql
          rm -rf apps/frontend/node_modules
          rm -rf apps/frontend/public
          rm -rf apps/frontend/scripts
          rm -rf apps/frontend/src
          rm -f apps/frontend/.env
          rm -f apps/frontend/.env.development
          rm -f apps/frontend/.eslintrc.js
          rm -f apps/frontend/.gitignore
          rm -f apps/frontend/index.html
          rm -f apps/frontend/package.json
          rm -f apps/frontend/tsconfig.json
          rm -f apps/frontend/vite.config.ts
          rm -f apps/frontend/vite-env.d.ts
          rm -f apps/frontend/yarn.lock
          rm -rf apps/backend/dist
          rm -rf apps/backend/node_modules
          rm -rf apps/backend/scripts
          rm -rf apps/backend/test
          rm -f apps/backend/.eslintrc.js
          rm -f apps/backend/.gitignore
          rm -f apps/backend/.prettierrc
          rm -f .gitattributes
          rm -f .gitignore
          rm -f docker-compose.yml
          rm -f README.md

      - name: Create archive
        run: zip -r live.24hisere.fr.zip .

      - name: Create artifact
        uses: actions/upload-artifact@v4
        with:
          name: live.24hisere.fr-artifact
          path: live.24hisere.fr.zip
          retention-days: 7


#  test:
#    runs-on: ubuntu-20.04
#    container: php:8.2-cli-alpine3.16
#    needs: build
#
#    steps:
#      - name: Download build
#        uses: actions/download-artifact@v3
#        with:
#          name: live.24hisere.fr-artifact
#
#      - name: Unzip archive
#        run: unzip live.24hisere.fr.zip
