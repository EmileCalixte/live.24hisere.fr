name: CI/CD

on:
  push:
    branches: [ cicd, master ]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Update apt
        run: sudo apt-get update

      - name: Uninstall current PHP version
        run: |
          sudo apt-get purge 'php*'
          sudo apt-get autoremove 'php*'

      - name: Uninstall current Node.js version
        run: |
          sudo apt-get purge nodejs
          sudo apt-get autoremove nodejs

      - name: Install PHP 8.0
        run: |
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository ppa:ondrej/php
          sudo apt-get install -y php8.0 php8.0-mbstring

      - name: Install Node.js 16
        run: |
          curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
          sudo apt-get install -y nodejs

      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Install PHP dependencies
        run: |
          cd backend
          composer install --no-dev
          cd ..

      - name: Install JS dependencies
        run: |
          cd frontend
          npm install
          cd ..

      - name: Create frontend config file
        env:
          FRONTEND_CONFIG_FILE_CONTENT: ${{ secrets.FRONTEND_CONFIG }}
        run: echo ${FRONTEND_CONFIG_FILE_CONTENT} > frontend/src/config/config.js

      - name: Create frontend production builds
        run: |
          cd frontend
          npm run build
          cd ..

      - name: Clean files
        run: |
          rm -rf .git
          rm -rf .github
          rm -f backend/composer.json
          rm -f backend/composer.lock
          rm -rf frontend/node_modules
          rm -rf frontend/public
          rm -rf frontend/scripts
          rm -rf frontend/src
          rm -f frontend/.gitignore
          rm -f frontend/package.json
          rm -f frontend/package-lock.json
          rm -rf import
          rm -rf sql
          rm -f .gitattributes
          rm -f .gitignore
          rm -f docker-compose.yml
          rm -f README.md

      - name: Get current date
        uses: 1466587594/get-current-time@v2.0.0
        id: current-date
        with:
          format: YYYY-MM-DD-HHmmss

      - name: Create archive
        env:
          time: "${{ steps.current-date.outputs.formattedTime }}"
        run: zip -r live.24hisere.fr-${{ env.time }}.zip .

      - name: Create artifact
        env:
          time: "${{ steps.current-date.outputs.formattedTime }}"
        uses: actions/upload-artifact@v3
        with:
          name: live.24hisere.fr-artifact
          path: live.24hisere.fr-${{ env.time }}.zip
          retention-days: 7


  test:
    runs-on: ubuntu-20.04
    container: php:8.0-cli-alpine3.15
    needs: build

    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: live.24hisere.fr-artifact

      - name: List files
        run: ls -al

#      - name: Run PHP tests
#        run: |
#          pushd backend
#          ./vendor/bin/phpunit --testdox tests
#          popd
